<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.mapper.BlogMapper" >

    <resultMap id="blog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="text" column="text"/>
        <result property="publishTime" column="publish_time"/>
        <result property="lastModifyTime" column="last_modify_time"/>
        <result property="recommend" column="recommend"/>
        <result property="readCount" column="read_count"/>
        <result property="summary" column="summary"/>
        <association property="type" column="type_id" select="com.blog.mapper.TypeMapper.selectById"/>
        <association property="user" column="user_id" select="com.blog.mapper.UserMapper.selectById"/>
        <collection property="commentList" column="id" select="com.blog.mapper.CommentMapper.selectByBlogId"/>
    </resultMap>

    <resultMap id="blog_index" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="readCount" column="read_count"/>
        <association property="type" column="type_id" select="com.blog.mapper.TypeMapper.selectById"/>
        <association property="user" column="user_id" select="com.blog.mapper.UserMapper.selectById"/>
        <collection property="commentList" column="id" select="com.blog.mapper.CommentMapper.selectByBlogId"/>
    </resultMap>

    <resultMap id="blog_userinfo" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="readCount" column="read_count"/>
        <result property="publishTime" column="publish_time"/>
        <result property="lastModifyTime" column="last_modify_time"/>
        <association property="type" column="type_id" select="com.blog.mapper.TypeMapper.selectById"/>
    </resultMap>

    <resultMap id="blog_simple" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="publishTime" column="publish_time"/>
        <result property="readCount" column="read_count"/>
        <association property="type" column="type_id" select="com.blog.mapper.TypeMapper.selectById"/>
        <association property="user" column="user_id" select="com.blog.mapper.UserMapper.selectSimpleById"/>
    </resultMap>

    <resultMap id="blog_admin" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="text" column="text"/>
        <result property="publishTime" column="publish_time"/>
        <result property="lastModifyTime" column="last_modify_time"/>
        <result property="recommend" column="recommend"/>
        <result property="readCount" column="read_count"/>
        <result property="summary" column="summary"/>
        <association property="user" column="user_id" select="com.blog.mapper.UserMapper.selectById"/>
    </resultMap>

    <select id="selectBlogsOrderByPT" resultMap="blog_simple">
        select * from blog
        <if test="typeId != null">
            where type_id = #{typeId}
        </if>
        order by publish_time desc
        <if test="limit != null">
            limit ${limit}
        </if>
    </select>

    <select id="selectBlogsOrderByReadCount" resultMap="blog_simple">
        select * from blog
        <if test="typeId != null">
            where type_id = #{typeId}
        </if>
        order by read_count desc
        <if test="limit != null">
            limit ${limit}
        </if>
    </select>

    <select id="selectRecommendBlogs" resultMap="blog_simple">
        select * from blog
        where recommend = 1
        <if test="typeId != null">
            and type_id = #{typeId}
        </if>
    </select>

    <select id="selectHotest" parameterType="int" resultMap="blog_index">
        select * from blog order by read_count desc limit ${limit}
    </select>

    <select id="selectLatest" parameterType="int" resultMap="blog_index">
        select * from blog order by publish_time desc limit ${limit}
    </select>

    <select id="selectRecommend" parameterType="int" resultMap="blog_index">
        select * from blog where recommend = 1 limit ${limit}
    </select>

    <select id="selectAll" resultMap="blog_admin">
        select * from blog
    </select>

    <select id="selectById" resultMap="blog_simple" parameterType="int">
        select * from blog where id = #{id}
    </select>

    <select id="selectByIdFull" parameterType="int" resultMap="blog">
        select * from blog where id = #{id}
    </select>

    <select id="selectCountByUserId" parameterType="int" resultType="_integer">
        select count(*) from blog where user_id = #{userId}
    </select>

    <select id="selectByUserId" resultMap="blog_userinfo">
        select * from blog where user_id = #{userId}
    </select>

    <select id="selectCount" resultType="_int">
        select count(*) from blog
    </select>

    <insert id="insert" parameterType="Blog">
        insert into blog value(null,#{title},#{summary},#{content},#{text},#{publishTime},#{lastModifyTime},#{recommend},#{readCount},#{type.id},#{user.id})
    </insert>

    <update id="update" parameterType="Blog">
      update blog
      <trim prefix="set" suffixOverrides=",">
          <if test="type != null and type.id != null">
            type_id = #{type.id},
          </if>
          <if test="user != null and user.id != null">
            user_id = #{user.id},
          </if>
          <if test="title != null and title != ''">
            title = #{title},
          </if>
          <if test="publishTime != null">
            publish_time = #{publishTime},
          </if>
          <if test="recommend != null">
            recommend = #{recommend},
          </if>
          <if test="readCouont != null">
            read_count = #{readCouont},
          </if>
          <if test="collectCouont != null">
            collect_count = #{collectCouont},
          </if>
          <if test="content != null and content != ''">
            content = #{content},
          </if>
          <if test="lastModifyTime != null">
            last_modify_time = #{lastModifyTime},
          </if>
          <if test="text != null and text != ''">
              text = #{text},
          </if>
      </trim>
      where id = #{id}
    </update>

    <update id="updateRecommend1" parameterType="int">
        update blog set recommend = '1' where id = #{id}
    </update>

    <update id="updateRecommend0" parameterType="int">
        update blog set recommend = '0' where id = #{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from blog where id = #{id}
    </delete>

</mapper>